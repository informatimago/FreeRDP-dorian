#!/bin/bash

display_help(){
  echo; echo "Usage:"
  echo -e "\t-m [--mit-flavour]\t\tinstall latest version of MIT Kerberos (used by default)"
  echo -e "\t-H [--heimdal-flavour]\t\tinstall latest version of Heimdal Kerberos"
  echo -e "\t-p [--krb-prefix]\t\tspecify Kerberos prefix"
  echo -e "\t-h [--help]\t\t\tdisplay this help and exit"; echo
}

if [ $# -le 0 ]; then
  display_help
  return 1
fi

# NOTE: This requires GNU getopt. On Mac OS X and FreeBSD,
# you have to install this separately.
TEMP=`getopt -o mHp:h --long mit-flavour,heimdal-flavour,krb-prefix:,help \
             -n 'install_latest_krb5' -- "$@"`

if [ $? != 0 ] ; then echo "Terminating..." >&2 ; return 1 ; fi

eval set -- "$TEMP"

MIT=true
HEIMDAL=false
ALL_VERSIONS=
PROXY_USERNAME=
PROXY_PASSWORD=
PROXY_HOST=
PROXY_PORT=
HTTP_PROXY=
HTTPS_PROXY=
START_DIR=$(echo `pwd`)

if [ "$BUILD_WITH_PKINIT" = "false" ] || [[ $BUILD_WITH_PKINIT = "" ]]; then
  KRB_PREFIX=
  echo "build without pkinit: BUILD_WITH_PKINIT=$BUILD_WITH_PKINIT; KRB_PREFIX=$KRB_PREFIX"
else
  echo "build with pkinit: BUILD_WITH_PKINIT=$BUILD_WITH_PKINIT; KRB_PREFIX=$KRB_PREFIX"
fi

while true; do
  case "$1" in
    -m | --mit-flavour ) MIT=true; shift;;
    -H | --heimdal-flavour ) HEIMDAL=true; MIT=false; shift;;
    -p | --krb-prefix ) KRB_PREFIX="$2"; shift 2;;
    -h | --help ) display_help; return 1;;
    -- ) shift; break ;;
    * ) break ;;
  esac
done

CURL=$(echo `dpkg -l curl | grep ii | cut -d ' ' -f 1`)
if ! [ "$CURL" = "ii" ]; then
  sudo apt-get install curl
fi

if [ "$MIT" = "true" ]; then
  ALL_VERSIONS=$(echo `curl -s https://api.github.com/repos/krb5/krb5/tags | grep name | grep final | cut -d '"' -f 4 | cut -d "-" -f 2`)
else
  ALL_VERSIONS=$(echo `curl -s https://api.github.com/repos/heimdal/heimdal/tags | grep name | grep heimdal | cut -d '"' -f 4 | cut -d '-' -f 2 | grep -Ev [a-z]`)
fi

if [[ $ALL_VERSIONS = "" ]]; then
  echo "curl failed to retrieve data. May be behind proxy. Retry."
  if [[ $https_proxy = "" ]]; then
    ANSWER=no
    while ! [[ $ANSWER =~ [Y|y] ]] && ! [[ $ANSWER =~ [Y|y]es ]] && ! [[ $ANSWER = "" ]]
    do
      read -p "Please specify proxy username :" PROXY_USERNAME
      read -s -p "Please specify proxy password :" PROXY_PASSWORD
      read -p "Please specify proxy host :" PROXY_HOST
      read -p "Please specify proxy port :" PROXY_PORT
      HTTPS_PROXY=https://$PROXY_USERNAME:$PROXY_PASSWORD@$PROXY_HOST:$PROXY_PORT
      echo "You chose : https://$PROXY_USERNAME:*********@$PROXY_HOST:$PROXY_PORT. OK ? [Y/n]"
      read ANSWER
    done
  else
    HTTPS_PROXY=$https_proxy
  fi

  if [ "$MIT" = "true" ]; then
    ALL_VERSIONS=$(echo `curl -x $HTTPS_PROXY -s https://api.github.com/repos/krb5/krb5/tags | grep name | grep final | cut -d '"' -f 4 | cut -d "-" -f 2`)
  else
    ALL_VERSIONS=$(echo `curl -x $HTTPS_PROXY -s https://api.github.com/repos/heimdal/heimdal/tags | grep name | grep heimdal | cut -d '"' -f 4 | cut -d '-' -f 2 | grep -Ev [a-z]`)
  fi

  if [[ $ALL_VERSIONS = "" ]]; then
   echo "curl failed to retrieve data. Please download krb5 sources by yourself"
   return 1
  fi
fi

VERSION=$(echo $ALL_VERSIONS |  cut -d " " -f 1)
MAJOR_VERSION=$(echo $VERSION | cut -d '.' -f1)
MINOR_VERSION=$(echo $VERSION | cut -d '.' -f2)
PATCH_VERSION=$(echo $VERSION | cut -d '.' -f3)

if [ "$MIT" = "true" ]; then
  if [ "$MAJOR_VERSION" -lt 1 ]; then
   echo "Failed to retrieve MIT Kerberos release >= 1.15.0 required for pkinit, please download it by yourself"
   return 1
  fi

  if [ "$MINOR_VERSION" -lt 15 ]; then
   echo "Failed to retrieve MIT Kerberos release >= 1.15.0 required for pkinit, please download it by yourself"
   return 1
  fi
else
  if [ "$MAJOR_VERSION" -lt 7 ]; then
   echo "Failed to retrieve Heimdal Kerberos release >= 7.4.0 required for pkinit, please download it by yourself"
   return 1
  fi

  if [ "$MINOR_VERSION" -lt 4 ]; then
   echo "Failed to retrieve Heimdal Kerberos release >= 7.4.0 required for pkinit, please download it by yourself"
   return 1
  fi

  if [ "$PATCH_VERSION" -lt 0 ]; then
   echo "Failed to retrieve Heimdal Kerberos release >= 7.4.0 required for pkinit, please download it by yourself"
   return 1
  fi
fi

if ! [ -d "/opt" ]; then
  sudo mkdir /opt
fi

if [ "$MIT" = "true" ]; then
  [ -f "/opt/krb5-$VERSION.tar.gz" ] && echo "/opt/krb5-$VERSION.tar.gz already downloaded" ||
    sudo wget --tries=5 http://web.mit.edu/kerberos/dist/krb5/$MAJOR_VERSION.$MINOR_VERSION/krb5-$VERSION.tar.gz -P /opt
else
  [ -f "/opt/heimdal-$VERSION.tar.gz" ] && echo "/opt/heimdal-$VERSION.tar.gz already downloaded" ||
    sudo wget --tries=5 https://github.com/heimdal/heimdal/releases/download/heimdal-$VERSION/heimdal-$VERSION.tar.gz -P /opt
fi

if [ $? -ne 0 ]; then
  echo "wget failed to retrieve data. May be behind proxy. Retry."
  if [ "$MIT" = "true" ]; then
    if [[ $http_proxy = "" ]]; then
      HTTP_PROXY=http://$PROXY_USERNAME:$PROXY_PASSWORD@$PROXY_HOST:$PROXY_PORT
    else
      HTTP_PROXY=$http_proxy
    fi
    sudo wget -e use_proxy=yes -e http_proxy=$HTTP_PROXY http://web.mit.edu/kerberos/dist/krb5/$MAJOR_VERSION.$MINOR_VERSION/krb5-$VERSION.tar.gz -P /opt
  else
    if [[ $https_proxy = "" ]]; then
      HTTPS_PROXY=http://$PROXY_USERNAME:$PROXY_PASSWORD@$PROXY_HOST:$PROXY_PORT
    else
      HTTPS_PROXY=$https_proxy
    fi
    sudo wget -e use_proxy=yes -e https_proxy=$HTTPS_PROXY https://github.com/heimdal/heimdal/releases/download/heimdal-$VERSION/heimdal-$VERSION.tar.gz -P /opt 
  fi
fi

if [ $? -ne 0 ]; then
  echo "Failed to download Kerberos $MAJOR_VERSION.$MINOR_VERSION. Please download it by yourself"
  return 1
fi

if [ "$MIT" = "true" ]; then
  if ! [[ $PATCH_VERSION = "" ]]; then
    sudo tar xzf /opt/krb5-$MAJOR_VERSION.$MINOR_VERSION.$PATCH_VERSION.tar.gz -C /opt
    if [ $? -ne 0 ]; then
      echo "Failed to extract Kerberos $MAJOR_VERSION.$MINOR_VERSION files. Please extract them by yourself"
      return 1
    fi
    cd /opt/krb5-$MAJOR_VERSION.$MINOR_VERSION.$PATCH_VERSION
    sudo chown -R 1000:1000 /opt/krb5-$MAJOR_VERSION.$MINOR_VERSION.$PATCH_VERSION
    KRB_SOURCES_DIR=/opt/krb5-$MAJOR_VERSION.$MINOR_VERSION.$PATCH_VERSION
  else
    sudo tar xzf /opt/krb5-$MAJOR_VERSION.$MINOR_VERSION.tar.gz -C /opt
    if [ $? -ne 0 ]; then
      echo "Failed to extract Kerberos $MAJOR_VERSION.$MINOR_VERSION files. Please extract them by yourself"
      return 1
    fi
    cd /opt/krb5-$MAJOR_VERSION.$MINOR_VERSION
    sudo chown -R 1000:1000 /opt/krb5-$MAJOR_VERSION.$MINOR_VERSION
    KRB_SOURCES_DIR=/opt/krb5-$MAJOR_VERSION.$MINOR_VERSION
  fi
else
  sudo tar xzf /opt/heimdal-$VERSION.tar.gz -C /opt
  if [ $? -ne 0 ]; then
    echo "Failed to extract Heimdal Kerberos $VERSION files. Please extract them by yourself"
    return 1
  fi
  cd /opt/heimdal-$VERSION
  sudo chown -R 1000:1000 /opt/heimdal-$VERSION
  KRB_SOURCES_DIR=/opt/heimdal-$VERSION
fi

PWD=$(echo `pwd`)
echo PWD=$PWD
BISON=$(echo `dpkg -l bison | grep ii | cut -d ' ' -f 1`)
if ! [ "$BISON" = "ii" ]; then
  sudo apt-get install bison
fi

if [[ $KRB_PREFIX = "" ]]; then
  ANSWER=no
  while ! [[ $ANSWER =~ [Y|y] ]] && ! [[ $ANSWER =~ [Y|y]es ]] && ! [[ $ANSWER = "" ]]
  do
    read -p "Please specify prefix directory for your Kerberos installation [/usr/local] : " KRB_PREFIX
    if [[ $KRB_PREFIX = "" ]]; then
      KRB_PREFIX="/usr/local"
    fi
    if ! [ -d "$KRB_PREFIX" ]; then
      echo "The directory $KRB_PREFIX does not exist. Try another one."
      continue
    fi
    echo "You chose : $KRB_PREFIX. OK ? [Y/n]"
    read ANSWER
  done
fi

if [ "$MIT" = "true" ]; then
  $PWD/src/configure --prefix=$KRB_PREFIX && make && sudo make install
else
  TEXINFO=$(echo `dpkg -l texinfo | grep ii | cut -d ' ' -f 1`)
  if ! [ "$TEXINFO" = "ii" ]; then
    sudo apt-get install texinfo 
  fi
  $PWD/autogen.sh && $PWD/configure --prefix=$KRB_PREFIX --with-db-type-preference= && make && sudo make install
fi

if [ $? -ne 0 ]; then
  if [ "$MIT" = "true" ]; then
    echo "Failed to install MIT Kerberos V5 $VERSION. Please fix compilation or installation errors before retrying to execute this script."
  else
    echo "Failed to install Heimdal Kerberos V5 $VERSION. Please fix compilation or installation errors before retrying to execute this script."
  fi
  cd $START_DIR
  return 1
fi

cd $START_DIR
echo
if [ "$MIT" = "true" ]; then
  echo "MIT Kerberos V5 $VERSION have been successfully installed in $KRB_PREFIX"
else
  echo "Heimdal Kerberos V5 $VERSION have been successfully installed in $KRB_PREFIX"
fi

return 0
